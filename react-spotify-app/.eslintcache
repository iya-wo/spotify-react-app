[{"C:\\Users\\End User\\Documents\\Black CodHer\\react-spotify-app\\react-spotify-app\\src\\index.js":"1","C:\\Users\\End User\\Documents\\Black CodHer\\react-spotify-app\\react-spotify-app\\src\\App.js":"2","C:\\Users\\End User\\Documents\\Black CodHer\\react-spotify-app\\react-spotify-app\\src\\reportWebVitals.js":"3"},{"size":517,"mtime":1610151482086,"results":"4","hashOfConfig":"5"},{"size":2507,"mtime":1610151482085,"results":"6","hashOfConfig":"5"},{"size":375,"mtime":1610151482089,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gdjjr7",{"filePath":"10","messages":"11","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\End User\\Documents\\Black CodHer\\react-spotify-app\\react-spotify-app\\src\\index.js",[],"C:\\Users\\End User\\Documents\\Black CodHer\\react-spotify-app\\react-spotify-app\\src\\App.js",["15","16","17","18","19","20","21","22","23","24","25"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport io from 'socket.io';\r\nimport './App.css';\r\nimport Typical from 'react-typical';\r\n\r\nconst App = (props) => { let interval;\r\nconst itemDefault = {\r\n  album: {\r\n    images: [{ url: \"\" }]\r\n  },\r\n  name: \"\",\r\n  artists: [{ name: \"\" }],\r\n  duration_ms: 0\r\n};\r\n\r\nconst [item, setItem] = useState(itemDefault);\r\nconst [isPlaying, setIsPlaying] = useState(\"Paused\");\r\nconst [progressms, setProgressms] = useState(0);\r\nconst [repeatState, setRepeatState] = useState();\r\nconst [shuffleState, setShuffleState] = useState();\r\nconst [device, setDevice] = useState();\r\n\r\nconst [data, setData] =  useState(true);\r\n\r\nuseEffect(() => {\r\n  let token = hash.access_token;\r\n  const backendEndpoint = 'https://https://chat-app-v2020.herokuapp.com/';\r\n  const socket = io(backendEndpoint, {transports: ['websocket']});\r\n\r\n  socket.emit('join', {\r\n    name: '',\r\n    room: ''\r\n  }, () => {});\r\n  socket.emit('disconnect');\r\n\r\n  if (token) {\r\n    setToken(token);\r\n    getCurrentlyPlaying(token);\r\n  }\r\n\r\n  interval = setInterval(() => {\r\n    tick(token);\r\n  }, 1000);\r\n\r\n  return () => {\r\n    clearInterval(interval);\r\n  }\r\n}, [])\r\n\r\nconst tick = (token) => {\r\n  if(token) {\r\n    getCurrentlyPlaying(token);\r\n  }\r\n}\r\n\r\nconst getCurrentlyPlaying = (token) => {\r\n  axios({\r\n    method: 'get',\r\n    url: 'https://api.spotify.com/v1/me/player',\r\n    headers: {\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  }).then(({ data }) => {\r\n    if(!data) {\r\n      setData(data);\r\n      return;\r\n    }\r\n\r\n    setItem(data.item);\r\n    setIsPlaying(data.is_playing);\r\n    setProgressms(data.progress_ms);\r\n    setShuffleState(data.shuffle_state);\r\n    setRepeatState(data.repeat_state);\r\n    setDevice(data.device.name);\r\n    setData(true);\r\n  });\r\n}\r\n\r\n}\r\n\r\n// // function App() {\r\n//   return (\r\n//     <div className=\"App\">\r\n//       {/* <header className=\"App-header\">\r\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n//         <h1>Hi, I'm Abi</h1>\r\n\r\n//         <p>\r\n//           I am a {' '}\r\n          \r\n//           <Typical \r\n//             loop={Infinity}\r\n//             wrapper=\"b\"\r\n//             steps={[\r\n//               'developer',\r\n//               1000,\r\n//               'artist',\r\n//               1000,\r\n//               'student',\r\n//               1000,\r\n//               'teacher',\r\n//               1000\r\n//             ]}\r\n//           />\r\n//         </p>\r\n//       </header> */}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nexport default App;\r\n","C:\\Users\\End User\\Documents\\Black CodHer\\react-spotify-app\\react-spotify-app\\src\\reportWebVitals.js",[],{"ruleId":"26","severity":1,"message":"27","line":1,"column":8,"nodeType":"28","messageId":"29","endLine":1,"endColumn":13},{"ruleId":"26","severity":1,"message":"30","line":5,"column":8,"nodeType":"28","messageId":"29","endLine":5,"endColumn":17},{"ruleId":"26","severity":1,"message":"31","line":8,"column":8,"nodeType":"28","messageId":"29","endLine":8,"endColumn":15},{"ruleId":"26","severity":1,"message":"32","line":20,"column":8,"nodeType":"28","messageId":"29","endLine":20,"endColumn":12},{"ruleId":"26","severity":1,"message":"33","line":21,"column":8,"nodeType":"28","messageId":"29","endLine":21,"endColumn":17},{"ruleId":"26","severity":1,"message":"34","line":22,"column":8,"nodeType":"28","messageId":"29","endLine":22,"endColumn":18},{"ruleId":"26","severity":1,"message":"35","line":23,"column":8,"nodeType":"28","messageId":"29","endLine":23,"endColumn":19},{"ruleId":"26","severity":1,"message":"36","line":24,"column":8,"nodeType":"28","messageId":"29","endLine":24,"endColumn":20},{"ruleId":"26","severity":1,"message":"37","line":25,"column":8,"nodeType":"28","messageId":"29","endLine":25,"endColumn":14},{"ruleId":"26","severity":1,"message":"38","line":27,"column":8,"nodeType":"28","messageId":"29","endLine":27,"endColumn":12},{"ruleId":"39","severity":1,"message":"40","line":45,"column":14,"nodeType":"41","endLine":47,"endColumn":11},"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'Dashboard' is defined but never used.","'Typical' is defined but never used.","'item' is assigned a value but never used.","'isPlaying' is assigned a value but never used.","'progressms' is assigned a value but never used.","'repeatState' is assigned a value but never used.","'shuffleState' is assigned a value but never used.","'device' is assigned a value but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'interval' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression"]